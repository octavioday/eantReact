{"version":3,"sources":["Components/Logo.js","Components/Link.js","Components/Menu.js","Components/Mapa/index.js","Components/Video/index.js","Components/Gondola/index.js","App.js","serviceWorker.js","index.js"],"names":["Logo","src","this","props","category","className","alt","React","Component","Link","href","url","target","blank","rel","text","Menu","menu","items","map","e","i","key","Mapa","id","zoom","long","lat","Video","play","allow","allowFullScreen","style","width","height","Producto","state","isLoaded","setState","datos","display","margin","onClick","onUpdatePrice","bind","nombre","precio","newPrice","prompt","Gondola","productos","links","App","fetch","then","rta","json","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd0b9f0c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Logo extends React.Component {\r\n\r\n  render(){\r\n    return <img src={`https://lorempixel.com/320/320/${this.props.category}`} className=\"App-logo\" alt=\"logo\" />\r\n  }\r\n\r\n}\r\nexport default Logo","import React from 'react'\r\nimport './Link.css'\r\n\r\nclass Link extends React.Component {\r\n\r\n  render(){\r\n    return <a className=\"App-link\" href={this.props.url} target={this.props.blank == \"yes\" ? \"_blank\" : \"_self\"} rel=\"noopener noreferrer\" >{this.props.text}</a>\r\n  }\r\n\r\n}\r\nexport default Link","import React from 'react'\r\nimport Link from './Link'\r\n\r\nclass Menu extends React.Component {\r\n\r\n  render(){\r\n    {/*\r\n    const menu = this.props.items.map( (e, i) => <a href={e.url} target={ e.blank ? \"_blank\" : \"_self\" } key={i}>{e.text}</a> )\r\n    return menu\r\n    */}\r\n    const menu = this.props.items.map( (e, i) => <Link url={e.url} blank={e.blank} text={e.text} key={i} />)\r\n\r\n    return <nav>{menu}</nav>\r\n  }\r\n\r\n}\r\nexport default Menu","\r\nimport React from 'react'\r\nimport './style.css'\r\n\r\nclass Mapa extends React.Component {\r\n\r\n  render(){\r\n    return <iframe id=\"mapa\" src={`https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d${this.props.zoom * 1000}!2d${this.props.long}!3d${this.props.lat}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1ses!2sar!4v1574809884625!5m2!1ses!2sar`}></iframe>\r\n  }\r\n\r\n}\r\nexport default Mapa","import React from 'react'\r\n\r\nclass Video extends React.Component {\r\n\r\n  render(){\r\n    return <iframe src={`https://www.youtube.com/embed/${this.props.id}?autoplay=${this.props.play == \"yes\" ? 1 : 0}`}  allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen style={ { width:480, height:320 }}></iframe>\r\n  }\r\n\r\n}\r\nexport default Video","import React from 'react'\r\n\r\nclass Producto extends React.Component {\r\n\r\n  //1) Antes de \"nacer\" el componente\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      isLoaded : false\r\n    }\r\n  }\r\n\r\n  //2) Al \"montar\" el componente en el Virtual DOM\r\n  componentDidMount(){ //<-- Ideal para operaciones asincrónicas (AJAX)\r\n    //console.log(\"Este es el componentDidMount\")\r\n    //console.log(this)\r\n    this.setState({ ...this.props.datos, isLoaded : true })\r\n  }\r\n  //3) Mostrar el componente en el Real DOM\r\n  render(){ //<-- Se re-ejecuta cada vez que se ejecuta primero el setState()\r\n    if( !this.state.isLoaded ){\r\n\r\n      return <em>Cargando...</em>\r\n\r\n    } else {\r\n\r\n      return <cite style={ { display : \"block\", margin : 10 } } onClick={this.onUpdatePrice.bind(this)}>Soy un producto llamado {this.state.nombre} y valgo ARS{this.state.precio}...</cite>\r\n\r\n    }\r\n  }\r\n  /////////////////////////////////\r\n  onUpdatePrice(){\r\n    //alert(`Si, en serio soy el componente Producto llamado \"${this.state.nombre}\"`)\r\n    let newPrice = prompt(\"Ingrese nuevo precio\")\r\n\r\n    this.setState({ precio : newPrice })\r\n  }\r\n\r\n}\r\n\r\nclass Gondola extends React.Component {\r\n\r\n  //1) Antes de \"nacer\" el componente\r\n  constructor(){\r\n    super()\r\n    this.state = {}\r\n  }\r\n\r\n  //2) Al \"montar\" el componente en el Virtual DOM\r\n  componentDidMount(){ //<-- Ideal para operaciones sincrónicas (Iteraciones)\r\n\r\n  }\r\n\r\n  //3) Mostrar el componente en el Real DOM\r\n  render(){\r\n    return <div>{this.props.productos.map( (e, i) => <Producto datos={e} key={i} /> )}</div>\r\n  }\r\n\r\n}\r\n\r\nexport default Gondola","import React from 'react'\nimport './App.css'\n\nimport Logo from './Components/Logo'\nimport Menu from './Components/Menu'\nimport Mapa from './Components/Mapa'\nimport Video from './Components/Video'\nimport Gondola from './Components/Gondola'\n\nconst links = [\n  {\n    url : \"https://reactjs.org\",\n    blank : true,\n    text : \"Documentation\"\n  },\n  {\n    url : \"https://reactjs.org/tutorial/tutorial.html\",\n    blank : false,\n    text : \"Tutorial\"\n  },\n  {\n    url : \"https://angular.io/docs\",\n    blank : true,\n    text : \"The Dark Side of the JS\"\n  }\n]\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      isLoaded : false\n    }\n  }\n\n  componentDidMount(){\n    /* DESAFIO IV: */\n    /* Traer los datos de la API desde App y usarlos para <Producto /> */\n    //fetch( OBTENCION ).then( CONVERSION ).then( UTILIZACION )\n    fetch(\"https://api.myjson.com/bins/1giaf3\").then( rta => rta.json() ).then( data => {\n      this.setState({ productos : data, isLoaded : true })\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Logo category=\"sports\" />\n          <p>Edit <code>src/App.js</code> and save to reload.</p>\n          { /* DESAFIO I: */ }\n          <Menu items={links} />\n\n          { /* DESAFIO II: */ }\n          <Mapa lat=\"-34.6078602\" long=\"-58.383111\" zoom=\"15\" />\n\n          {/* DESAFIO III: */}\n          <Video id=\"TobNCFMK_bs\" play=\"no\" />\n\n          {/* DESAFIO V: */}\n          {/* Crear los X productos segun cant. de items + asignacion de datos al componente Producto */}\n          { !this.state.isLoaded ? <p>Cargandoooo... wooo...</p> : <Gondola productos={this.state.productos} /> }\n\n        </header>\n      </div>\n    )\n  }\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}